name: "Build releases"

on:
  push:
    tags: ['v[0-9]+.[0-9]+.[0-9]+']

env:
  RUST_BACKTRACE: 1
  CARGO_INCREMENTAL: 0
  CARGO_PROFILE_DEV_DEBUG: 0
  CARGO_HUSKY_DONT_INSTALL_HOOKS: true
  COMPLETION_DIR: "target/tmp/moonbois/completion/"
  MANPAGE_DIR: "target/tmp/moonbois/manpage/"

permissions:
  id-token: write
  contents: write
  attestations: write

jobs: 
  release:
    name: Create Release
    runs-on: ubuntu-latest
    steps:
      - name: Debug GITHUB_TOKEN permissions
        run: gh auth status
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Checkout repo
        uses: actions/checkout@v4
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref_name }}
          release_name: Release ${{ github.ref_name }}
          draft: false
          prerelease: false

  build-binaries:
    name: "Build binaries"
    runs-on: ${{ matrix.info.os }}
    needs: release
    container: ${{ matrix.info.container }}
    timeout-minutes: 12
    strategy:
      matrix:
        info:
          # ======= Supported targets =======
          # Linux (x86-64, x86, aarch64)
          - {
              os: "ubuntu-20.04",
              target: "x86_64-unknown-linux-gnu",
              cross: false,
              generate-other-artifacts: true,
            }
          - {
              os: "ubuntu-20.04",
              target: "i686-unknown-linux-gnu",
              cross: true,
            }
          - {
              os: "ubuntu-20.04",
              target: "x86_64-unknown-linux-musl",
              cross: true,
            }
          - {
              os: "ubuntu-20.04",
              target: "i686-unknown-linux-musl",
              cross: true,
            }
          - {
              os: "ubuntu-20.04",
              target: "aarch64-unknown-linux-gnu",
              cross: true,
            }
          - {
              os: "ubuntu-20.04",
              target: "aarch64-unknown-linux-musl",
              cross: true,
            }

          # macOS (x86-64 and aarch64)
          - { os: "macos-13", target: "x86_64-apple-darwin", cross: false }
          - { os: "macos-14", target: "aarch64-apple-darwin", cross: false }

          # Windows (x86-64, x86)
          - {
              os: "windows-2019",
              target: "x86_64-pc-windows-msvc",
              cross: false,
            }
          - { os: "windows-2019", target: "i686-pc-windows-msvc", cross: false }
          - {
              os: "windows-2019",
              target: "x86_64-pc-windows-gnu",
              cross: false,
            }
    steps:
      - name: Checkout repository
        uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7
        with:
          fetch-depth: 1

      - name: Set up Rust toolchain
        uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          toolchain: stable
          target: ${{ matrix.info.target }}

      - name: Build
        uses: ClementTsang/cargo-action@v0.0.5
        with:
          command: build
          args: --release --verbose --target=${{ matrix.info.target }}
          use-cross: ${{ matrix.info.cross }}
          cross-version: 0.2.5

      - name: Package release (Windows)
        if: matrix.info.os == 'windows-2019'
        shell: bash
        run: |
          cp target/${{ matrix.info.target }}/release/cli.exe moonbois_${{ matrix.info.target }}.exe
          echo "ASSET=moonbois_${{ matrix.info.target }}.exe" >> $GITHUB_ENV

      - name: Package release (Linux and macOS)
        if: matrix.info.os != 'windows-2019'
        shell: bash
        run: |
          cp target/${{ matrix.info.target }}/release/cli moonbois_${{ matrix.info.target }}
          echo "ASSET=moonbois_${{ matrix.info.target }}" >> $GITHUB_ENV

      - name: Create release directory for artifact, move file
        shell: bash
        run: |
          mkdir -p release
          mv ${{ env.ASSET }} release/

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: moonbois-${{ matrix.info.target }}
          path: release/

      - name: Upload binary to release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: ${{ env.ASSET }}
          asset_name: ${{ env.ASSET }}
          tag: ${{ github.ref_name }}
      
